version 1.4.0pre1:

- API change: identical ioctls for 32 and 64 bit modes, allowing the
  use of the 32 bit user space QEMU on a 64 bit host.
- Added KQEMU_SET_PHYS_MEM ioctl to separate the physical memory
  mappings of kqemu from the QEMU ones.
- Added communication page for paravirtualization. A paravirtualized
  guest OS can modify its IF and IOPL flags without a fallback to the
  KQEMU x86 interpreter.
- fixed CBW instruction emulation (aka Linux 2.6.25 bug)

version 1.3.0pre11:

- dynamic device '/dev/kqemu' creation is now the default.
- '-fno-stack-protector' gcc option fix
- added kqemu regression tests (can serve as API usage example too)
- included kqemu technical doc

version 1.3.0pre10:

- Changed license to GPL version 2
- x86_64 full virtualization support

version 1.3.0pre9:

- Fixed host CR0.TS computation (aka Windows XP host bug with
  -kernel-kqemu and FreeBSD host "npxdna: fpcurthread == curthread"
  error message).

version 1.3.0pre8:

- API change for MODULE_PARM macro in 2.6.x kernels.

version 1.3.0pre7:

- null LDT handling typo

version 1.3.0pre6:

- compile fix for Linux kernel version >= 2.6.16
- better null LDT handling (aka Plan9 and ReactOS bug)
- moved monitor code to another address (aka win2k 256 MB bug)

version 1.3.0pre5:

- fixed handling of 8 bit registers (aka Linux bug with -kernel-kqemu)
- win32 temporary workaround for CancelIo()

version 1.3.0pre4:

- x86_64 fixes

version 1.3.0:

- acceleration of target kernel code for most OSes
- the memory allocation is now dynamic according to the number of
  instances
- some optimisations for target user code
- compilation is separated from QEMU

version 0.7.2:

- more precise segmentation support (aka Win98 support)
- new API to track dirty RAM pages
- CR4.TSD support
- SYSENTER fix for x86_64
- (Linux) added 'max_instances' module parameter
- (win32) cpu interruption support (Filip Navara)
- (win32) kqemu.inf installation file (Filip Navara)
- IOPL restore fix (aka xen bug)

version 0.7.1-1:

- FreeBSD compile fixes - added x86_64 support
- __PAGE_KERNEL_EXEC fix for Linux 2.6

version 0.7.1:

- PAE fixes
- x86_64 support
- 'syscall' insn support in 32 bit mode
- Windows support
